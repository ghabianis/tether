#+title: Todo

* TODO Now [1/6]
** DONE Scrolling [0/0]
*** DONE scrolling updates the model matrix with x,y translation
*** DONE cap y and x axis [0/0]
**** DONE yt <= 0 and yt >= text_height
**** DONE xt >= 0 and xt <= text_width
**** DONE xt locked at 0 until text_width >= screen_width
** TODO bug newline
after the while loop in build_text_geometry, need to also add vertices for the end of line
** TODO Status line
** TODO Line numbers
** TODO moving up/down/creating lines preserves word column when possible
example:
#+begin_src zig
pub fn start_of_line(self: *Self) void {
    self.cursor.col = 0;
    self.draw_text = true;
}
#+end_src

if cursor is at =s= in =start_of_line= (index 7)

when going down, cursor will try to be on index 7 if possible, if not then the greatest char possible
** TODO bug: =cc= (change line) should preserve line and not delete it entirely
* TODO Later [0/7]
** TODO cursor on ligature glyph should render the regular glyph on top of cursor
** TODO add new ligatures to atlas when encountered
easiest to rebuild atlas from scratch again

later can do this off main thread so rendering isn't interrupted
** TODO don't render/rebuild geometry if not needed
especially right now we rebuild all text when moving cursor as ez way to redraw cursor since it depends on text position

now we this charIdxToVertexIdx map we create in create_text_geometry, we can save this and use it to get their
vertices of a given char, so we can redraw the crusor without having to call =create_text_geometry= again.
** TODO event loop or some mechanism to do work without stalling frame
** TODO create deinit function for renderer/editor
** TODO Egui for debugging?
** TODO curves svg etc
* Archive
** DONE Fix cursor [0/0]
*** DONE not in front of text
*** DONE newline fucks it up
** DONE next line is not starting at the right Y
we use =max_glyph_h= as the Y advance
but this is not correct
it needs to take into account glyphs that have their y origin lower
for example in the glyph 'y'
i think this might be the 'descent' font metric
